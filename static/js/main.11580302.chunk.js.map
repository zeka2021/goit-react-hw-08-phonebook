{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","redux/contactSlice.js","redux/authApi.js","redux/actions.js","redux/reducers.js","redux/store.js","views/RegisterView.js","views/LoginView.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/ContactList/Contact/Contact.js","views/ContactsView.js","redux/selectors.js","components/PrivateRoute.js","components/PublicRoute.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/Container/Container.js","components/AppBar/AppBar.js","App.js","index.js"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","set","tagTypes","keepUnusedDataFor","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","id","url","method","invalidatesTags","addContact","body","updateContact","event","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","authApi","useUpdateContactMutation","signup","login","logout","current","useSignupMutation","useLoginMutation","useLogoutMutation","useCurrentQuery","filterContact","createAction","setToken","isLogin","filterReducer","createReducer","_","payload","action","isLoggetIn","authPersistConfig","key","storage","whitelist","rootReducer","combineReducers","filter","reducer","persistedReducer","persistReducer","store","configureStore","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","persistor","persistStore","styles","form","margin","width","title","textAlign","color","label","display","flexDirection","marginBottom","RegisterView","useState","name","setName","email","setEmail","password","setPassword","signupUser","dispatch","useDispatch","handleChange","target","value","dataHandle","data","console","log","style","onSubmit","e","preventDefault","then","catch","error","autoComplete","type","onChange","LoginView","loginUser","dataHandler","ContactForm","contacts","refetch","number","setNumber","useEffect","reset","className","s","wrapperForm","bodyForm","some","contact","includes","window","alert","formGrup","formGgroupLabel","pattern","required","formGroupInput","submitButton","button","Filter","useSelector","state","filterForm","filterGrup","filterGrupLabel","filterGrupInput","currentTarget","ContactList","children","container","listContainer","Contact","itemContact","itemSpanContent","onClick","ContactsView","filterContacts","toLowerCase","map","uuidv4","isUserLogin","PrivateRoute","redirectTo","routeProps","isLoggedIn","authSelectors","to","PublicRoute","restricted","shouldRedirect","link","textDecoration","padding","fontWeight","fontSize","activeLink","Navigation","exact","activeStyle","alignItems","marginRight","user","UserMenu","logoutUser","AuthNav","Container","header","justifyContent","borderBottom","AppBar","App","fallback","path","render","pathname","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.11580302.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyForm\":\"ContactForm_bodyForm__1Qlv3\",\"wrapperForm\":\"ContactForm_wrapperForm__3Icui\",\"stripesBlock\":\"ContactForm_stripesBlock__cQCld\",\"formGrup\":\"ContactForm_formGrup__QGaZs\",\"formGroupInput\":\"ContactForm_formGroupInput__3mtAH\",\"form-groupLabel\":\"ContactForm_form-groupLabel__1tQxD\",\"formGgroupLabel\":\"ContactForm_formGgroupLabel__krtjv\",\"button\":\"ContactForm_button__3nUXT\",\"submitButton\":\"ContactForm_submitButton__3Z60v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"Filter_filterForm__3hZGY\",\"filterGrup\":\"Filter_filterGrup__1j925\",\"filterGrupInput\":\"Filter_filterGrupInput__v6hIs\",\"filterGrupLabel\":\"Filter_filterGrupLabel__36s7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContact\":\"Contact_itemContact__2HK4s\",\"itemSpanContent\":\"Contact_itemSpanContent__1viig\",\"button\":\"Contact_button__2OMHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"ContactList_listContainer__JAgE4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Tcd_\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com/',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().token;\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  tagTypes: ['contact'],\r\n  keepUnusedDataFor: 30,\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => 'contacts',\r\n      providesTags: ['contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query(id) {\r\n        return {\r\n          url: `contacts/${id}`,\r\n          method: 'DELETE',\r\n        };\r\n      },\r\n      invalidatesTags: ['contact'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query(body) {\r\n        return {\r\n          url: 'contacts',\r\n          method: 'POST',\r\n          body,\r\n        };\r\n      },\r\n      invalidatesTags: ['contact'],\r\n    }),\r\n    updateContact: builder.mutation({\r\n      query({ event, id }) {\r\n        return {\r\n          url: `contacts/${id}`,\r\n          method: 'PATCH',\r\n          body: event,\r\n        };\r\n      },\r\n      invalidatesTags: ['contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useAddContactMutation,\r\n  useUpdateContactMutation,\r\n} = contactApi;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: 'authApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com/',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState()?.token;\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  tagTypes: ['auth', 'current'],\r\n  keepUnusedDataFor: 0,\r\n  endpoints: builder => ({\r\n    signup: builder.mutation({\r\n      query: body => ({\r\n        url: 'users/signup',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['auth'],\r\n    }),\r\n    login: builder.mutation({\r\n      query: body => ({\r\n        url: 'users/login',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['auth'],\r\n    }),\r\n    logout: builder.mutation({\r\n      query: () => ({\r\n        url: 'users/logout',\r\n        method: 'POST',\r\n      }),\r\n      invalidatesTags: ['auth'],\r\n    }),\r\n    current: builder.query({\r\n      query: () => 'users/current',\r\n      invalidatesTags: ['current'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useSignupMutation,\r\n  useLoginMutation,\r\n  useLogoutMutation,\r\n  useCurrentQuery,\r\n} = authApi;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContact = createAction('contact/filter');\r\nexport const setToken = createAction('setToken');\r\nexport const isLogin = createAction('isLogin');","import { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContact, isLogin, setToken } from './actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\nexport const token = createReducer('', {\r\n  [setToken]: (_, action) => action.payload,\r\n});\r\n\r\nexport const isLoggetIn = createReducer(false, {\r\n  [isLogin]: (_, action) => action.payload,\r\n});","\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { contactApi } from './contactSlice';\r\nimport { authApi } from './authApi';\r\nimport { filterReducer, token, isLoggetIn } from './reducers';\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst authPersistConfig = {\r\n  key: 'authData',\r\n  storage,\r\n  whitelist: ['token', 'isLoggetIn'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  isLoggetIn,\r\n  filter: filterReducer,\r\n  token,\r\n  [contactApi.reducerPath]: contactApi.reducer,\r\n  [authApi.reducerPath]: authApi.reducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(authPersistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    })\r\n      .concat(contactApi.middleware)\r\n      .concat(authApi.middleware),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport { store, persistor };","import { useState } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { isLogin, setToken } from '../redux/actions';\r\n//fetch servises\r\nimport { useSignupMutation } from '../redux/authApi';\r\n\r\nconst styles = {\r\n  form: {\r\n    margin: 'auto',\r\n    width: 320,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    color: '#ffffff',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function RegisterView() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [signupUser] = useSignupMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const dataHandle = ({ data }) => {\r\n    console.log(data);\r\n    dispatch(setToken(data.token));\r\n    dispatch(isLogin(true));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    signupUser({ name, email, password })\r\n      .then(dataHandle)\r\n      .catch(error => console.log(error));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={styles.title}>Sign up page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Name\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Sign up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { useLoginMutation } from '../redux/authApi';\r\nimport { useDispatch } from 'react-redux';\r\nimport { isLogin, setToken } from '../redux/actions';\r\n\r\nconst styles = {\r\n  form: {\r\n    margin: 'auto',\r\n    width: 320,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    color: '#ffffff',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function LoginView() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginUser] = useLoginMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const dataHandler = ({ data }) => {\r\n    dispatch(setToken(data.token));\r\n    dispatch(isLogin(true));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    loginUser({ email, password })\r\n      .then(dataHandler)\r\n      .catch(e => console.log(e));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={styles.title}>Login page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Войти</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import  { useState, useEffect } from 'react';\nimport { useAddContactMutation } from '../../redux/contactSlice';\nimport { useCurrentQuery } from '../../redux/authApi'; \n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({contacts}) {\n  const { refetch } = useCurrentQuery();\n  const [addContact] = useAddContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    refetch();\n  }, [contacts, refetch]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n      switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n   const isNotUniqueContact = contacts.some(contact =>\n      contact.name.includes(name),\n    );\n\n    if (isNotUniqueContact) {\n      window.alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    addContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n     setName('');\n    setNumber('');\n  };\n  \n    return (\n      <div className={s.wrapperForm}>\n        <form className={s.bodyForm} onSubmit={handleSubmit}>\n          <div className={s.formGrup}>\n            <label className={s.formGgroupLabel}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                onChange={handleChange}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n            <label className={s.formGgroupLabel}>\n              number\n              <input\n                type=\"tel\"\n                value={number}\n                onChange={handleChange}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n          </div>\n          <div className={s.submitButton}>\n            <button className={s.button} type=\"submit\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n    return (\n      <div className={s.filterForm}>\n        <div className={s.filterGrup}>\n          <label className={s.filterGrupLabel}>\n            Find contacts by name\n            <input\n              className={s.filterGrupInput}\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={e => dispatch(filterContact(e.currentTarget.value))}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n\n\nexport default Filter;\n","// import React, { Component } from 'react';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ children}) {\n  \n    return (\n      <div className={s.container}>\n        <ul className={s.listContainer}>{children}</ul>\n      </div>\n    );\n  }\n\nexport default ContactList;\n","// import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\n// import { deleteContact } from '../../redux/actions';\nimport { useDeleteContactMutation } from '../../../redux/contactSlice';\nimport s from './Contact.module.css';\n\nfunction Contact({ contact: { name, number, id } }) {\n//  const dispatch = useDispatch();\n  const [deleteContact] = useDeleteContactMutation();\n\n    return (\n      <li className={s.itemContact}>\n        <span className={s.itemSpanContent}>{name}</span>\n        <span className={s.itemSpanContent}>{number}</span>\n        <button className={s.button}\n          onClick={() =>  deleteContact(id)}>\n          Delet contact\n        </button>\n      </li>\n    );\n  }\n\n\nContact.propTypes = {\n  // deleteContact: PropTypes.func.isRequired,\n  contact: PropTypes.objectOf(PropTypes.string.isRequired),\n};\nexport default Contact;\n","import { useSelector } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport Contact from '../components/ContactList/Contact';\r\nimport { useFetchContactsQuery } from '../redux/contactSlice';\r\n\r\nexport default function ContactsView() {\r\n  const { data: contacts } = useFetchContactsQuery();\r\n\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  const filterContacts = contacts =>\r\n    contacts\r\n      ? [...contacts].filter(({ name }) => name.toLowerCase().includes(filter))\r\n      : null;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">Phonebook</h1>\r\n      <ContactForm contacts={contacts} />\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <Filter />\r\n\r\n      <ContactList>\r\n        {filterContacts(contacts) &&\r\n          filterContacts(contacts).map(contact => (\r\n            <Contact key={uuidv4()} contact={contact} />\r\n          ))}\r\n      </ContactList>\r\n    </div>\r\n  );\r\n}","export const getFilterValue = state => state.filter;\r\nexport const isUserLogin = state => state.isLoggetIn;","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as authSelectors from '../redux/selectors';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/login',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.isUserLogin);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as authSelectors from '../redux/selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/login',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.isUserLogin);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as authSelectors from '../../redux/selectors';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    fontSize: 24,\r\n    // color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#ffffff',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.isUserLogin);\r\n\r\n  return (\r\n    <nav>\r\n      {isLoggedIn && (\r\n        <>\r\n          <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n          >\r\n            Contacts\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import { useDispatch } from 'react-redux';\r\nimport { setToken, isLogin } from '../../redux/actions';\r\nimport { useCurrentQuery, useLogoutMutation } from '../../redux/authApi';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n    fontSize: 20,\r\n  },\r\n  user: {\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const [logoutUser] = useLogoutMutation();\r\n  const dispatch = useDispatch();\r\n\r\n  const { data } = useCurrentQuery();\r\n\r\n  function dataHandler() {\r\n    dispatch(setToken(''));\r\n    dispatch(isLogin(false));\r\n  }\r\n\r\n  function handleLogout() {\r\n    logoutUser()\r\n      .then(dataHandler)\r\n      .catch(e => console.log(e));\r\n  }\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>\r\n        Welcome, <span style={styles.user}>{data?.name}</span>\r\n      </span>\r\n      <button type=\"button\" onClick={handleLogout}>\r\n        LogOut\r\n      </button>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n\r\n    fontWeight: 700,\r\n    color: '#ffffff',\r\n    fontSize: 20,\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Sign up\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import { useSelector } from 'react-redux';\r\n// import { Outlet } from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport Container from '../Container';\r\nimport { isUserLogin } from '../../redux/selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(isUserLogin);\r\n\r\n  return (\r\n    <Container>\r\n      <header style={styles.header}>\r\n        <Navigation />\r\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      </header>\r\n      {/* <Outlet /> */}\r\n    </Container>\r\n  );\r\n}","import { Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport RegisterView from './views/RegisterView';\nimport LoginView from './views/LoginView';\nimport ContactsView from './views/ContactsView';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport AppBar from './components/AppBar';\n\nfunction App() {\n  return (\n    <>\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <PublicRoute exact path=\"/register\" restricted>\n            <RegisterView />\n          </PublicRoute>\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <LoginView />\n          </PublicRoute>\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n          <Route render={() => <Redirect to={{ pathname: '/register' }} />} />\n        </Suspense>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n       </PersistGate>\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}